{
  "GET /api": {
    "description": "Returns a JSON object listing all available API endpoints with their descriptions.",
    "queries": [],
    "exampleRequest": "/api"
  },

  "GET /api/topics": {
    "description": "Returns an array of topic objects.",
    "queries": [],
    "exampleRequest": "/api/topics",
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    }
  },

  "GET /api/users": {
    "description": "Returns an array of user objects, each containing the properties: username, name, and avatar_url.",
    "queries": [],
    "exampleRequest": "/api/users",
    "exampleResponse": {
      "users": [
        {
          "username": "butter_bridge",
          "name": "jonny",
          "avatar_url": "https://www.healthytherapies.com/wp-content/uploads/2016/06/Lime3.jpg"
        }
      ]
    }
  },

  "GET /api/users/:username": {
    "description": "Returns a user object corresponding to the specified username.",
    "queries": [],
    "exampleRequest": "/api/users/lurker",
    "exampleResponse": {
      "user": {
        "username": "lurker",
        "name": "Jane Doe",
        "avatar_url": "https://some-image.com/avatar.png"
      }
    }
  },

  "GET /api/articles": {
    "description": "Returns a paginated array of article objects. Each object includes comment_count and excludes the body field. Supports sorting, ordering, topic filtering, and pagination via query parameters.",
    "queries": ["sort_by", "order", "topic", "limit", "p"],
    "exampleRequest": "/api/articles?sort_by=created_at&order=asc&topic=mitch&limit=5&p=2",
    "exampleResponse": {
      "total_count": 25,
      "articles": [
        {
          "article_id": 6,
          "title": "Exploring the woods",
          "author": "grumpy19",
          "topic": "mitch",
          "created_at": "2020-09-17T14:11:00.000Z",
          "votes": 50,
          "article_img_url": "https://images.pexels.com/photos/158651/news-newsletter-newspaper-information-158651.jpeg?w=700&h=700",
          "comment_count": 3
        }
      ]
    }
  },

  "GET /api/articles/:article_id": {
    "description": "Returns a single article object, specified by article_id. Includes a comment_count property.",
    "queries": [],
    "exampleRequest": "/api/articles/1",
    "exampleResponse": {
      "article": {
        "article_id": 1,
        "title": "Running a Node App",
        "topic": "coding",
        "author": "jessjelly",
        "body": "This is part two of a series on how to get up and running with Systemd and Node.js. This part dives deeper into how to successfully run your app with systemd long-term, and how to set it up in a production environment.",
        "created_at": "2020-11-07 06:03:00",
        "votes": 0,
        "article_img_url": "https://images.pexels.com/photos/11035380/pexels-photo-11035380.jpeg?w=700&h=700",
        "comment_count": 8
      }
    }
  },

  "GET /api/articles/:article_id/comments": {
    "description": "Returns a paginated array of comment objects for the specified article_id, sorted by created_at in descending order. Supports pagination via limit and p query parameters.",
    "queries": ["limit", "p"],
    "exampleRequest": "/api/articles/1/comments?limit=10&p=2",
    "exampleResponse": {
      "comments": [
        {
          "comment_id": 5,
          "votes": 0,
          "created_at": "2020-11-03T21:00:00.000Z",
          "author": "icellusedkars",
          "body": "I hate streaming noses",
          "article_id": 1
        }
      ],
      "total_count": 12
    }
  },

  "POST /api/articles": {
    "description": "Creates a new article. Accepts an object with author, title, body, topic, and optionally article_img_url. Returns the created article including comment_count set to 0.",
    "queries": [],
    "exampleRequest": "/api/articles",
    "exampleBody": {
      "author": "lurker",
      "title": "New Article Title",
      "body": "Article content goes here...",
      "topic": "cats"
    },
    "exampleResponse": {
      "newArticle": {
        "article_id": 13,
        "author": "lurker",
        "title": "New Article Title",
        "body": "Article content goes here...",
        "topic": "cats",
        "article_img_url": "/images/default-profile.png",
        "votes": 0,
        "created_at": "2025-05-02T15:00:00.000Z",
        "comment_count": 0
      }
    }
  },

  "POST /api/articles/:article_id/comments": {
    "description": "Creates a new comment on the specified article. Requires username and body. Returns the created comment object.",
    "queries": [],
    "exampleRequest": "/api/articles/1",
    "exampleBody": {
      "username": "lurker",
      "body": "test body of text"
    },
    "exampleResponse": {
      "comment": {
        "comment_id": 19,
        "article_id": 1,
        "author": "lurker",
        "body": "test body of text",
        "votes": 0,
        "created_at": "2025-04-29T15:22:36.791Z"
      }
    }
  },

  "POST /api/topics": {
    "description": "Creates a new topic. Accepts an object with slug and description. Returns the created topic object.",
    "queries": [],
    "exampleRequest": "/api/topics",
    "exampleBody": {
      "slug": "philosophy",
      "description": "Deep and meaningful discussion"
    },
    "exampleResponse": {
      "topic": {
        "slug": "philosophy",
        "description": "Deep and meaningful discussion"
      }
    }
  },

  "PATCH /api/articles/:article_id": {
    "description": "Updates the vote count of the specified article by the value provided in inc_votes. Returns the updated article.",
    "queries": [],
    "exampleRequest": "/api/articles/1",
    "exampleBody": {
      "inc_votes": 50
    },
    "exampleResponse": {
      "article": {
        "article_id": 1,
        "title": "Living in the shadow of a great man",
        "votes": 150,
        "author": "butter_bridge",
        "topic": "mitch",
        "created_at": "2020-11-07T06:03:00.000Z",
        "body": "I find this existence challenging",
        "article_img_url": "https://images.pexels.com/photos/158651/news-newsletter-newspaper-information-158651.jpeg?w=700&h=700"
      }
    }
  },

  "PATCH /api/comments/:comment_id": {
    "description": "Updates the vote count of the specified comment by the value provided in inc_votes. Returns the updated comment.",
    "queries": [],
    "exampleRequest": "/api/comments/1",
    "exampleBody": {
      "inc_votes": 1
    },
    "exampleResponse": {
      "comment": {
        "comment_id": 1,
        "votes": 17,
        "author": "butter_bridge",
        "body": "This is a great article!",
        "article_id": 9,
        "created_at": "2020-04-06T12:17:00.000Z"
      }
    }
  },

  "DELETE /api/articles/:article_id": {
    "description": "Deletes the specified article and its associated comments. Returns 204 with no content.",
    "queries": [],
    "exampleRequest": "/api/articles/1",
    "exampleResponse": {}
  },

  "DELETE /api/comments/:comment_id": {
    "description": "Deletes the specified comment. Returns 204 with no content.",
    "queries": [],
    "exampleRequest": "/api/comments/1",
    "exampleResponse": {}
  }
}
